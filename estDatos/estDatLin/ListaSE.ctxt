#BlueJ class context
comment0.target=ListaSE
comment1.params=
comment1.target=ListaSE()
comment10.params=
comment10.target=void\ clear()
comment11.params=pos\ data
comment11.target=void\ replace(int,\ java.lang.Object)
comment12.params=
comment12.target=java.lang.String\ toString()
comment13.params=aux
comment13.target=java.lang.String\ toString(java.lang.String)
comment14.params=posIni\ posFin
comment14.target=List\ subList(int,\ int)
comment14.text=\ genera\ una\ nueva\ lista\ desde\ posInic\ hasta\ posFin\ inclusivo\r\nSi\ no\ existe\ posFin,\ elimina\ hasta\ la\ \u00FAltima\ posici\u00F3n.\ Si\ no\ existe\ posIni,\ devuelve\ una\ lista\ vac\u00EDa
comment15.params=another
comment15.target=boolean\ equals(List)
comment15.text=compara\ si\ la\ lista\ es\ igual\ a\ another\ en\ cuanto\ a\ contenido\ y\ orden
comment16.params=pos1\ pos2
comment16.target=void\ swap(int,\ int)
comment16.text=intercambia\ los\ datos\ de\ pos1\ a\ pos\ 2\ y\ viceversa
comment17.params=another
comment17.target=void\ insertAll(ListaSE)
comment17.text=inserta\ todos\ los\ elementos\ de\ la\ otra\ lista\ al\ final
comment18.params=another\ pos
comment18.target=void\ insertListByPos(ListaSE,\ int)
comment18.text=inserta\ una\ lista\ desde\ la\ posici\u00F3n\ indicada\ y\ recorre\ el\r\n\ \ \ \ resto\ de\ elementos,\ si\ pos\ no\ existe,\ no\ hace\ nada\r\n\ \ \ \ {1,2,3}\ ;\ list\ \=\ {4,5,6}\ \r\n\ \ \ \ 0\ 1\ 2\ \ \ \ \r\n\ \ \ \ insertListByPos(list,\ 3)\ ->\ {1,2,3,4,5,6}\r\n0\ 1\ 2\ 3\ 4\ 5
comment19.params=data
comment19.target=int\ indexOf(java.lang.Object)
comment19.text=indice\ del\ primer\ dato\ encontrado
comment2.params=dato
comment2.target=ListaSE(java.lang.Object)
comment20.params=data\ pos
comment20.target=void\ insertByPos(java.lang.Object,\ int)
comment21.params=
comment21.target=void\ reverse()
comment22.params=pos
comment22.target=void\ deleteFrom(int)
comment3.params=
comment3.target=boolean\ isEmpty()
comment4.params=data
comment4.target=void\ insert(java.lang.Object)
comment5.params=pos
comment5.target=java.lang.Object\ delete(int)
comment6.params=pos
comment6.target=java.lang.Object\ get(int)
comment7.params=data
comment7.target=boolean\ search(java.lang.Object)
comment8.params=
comment8.target=int\ length()
comment9.params=data
comment9.target=void\ deleteAll(java.lang.Object)
numComments=23
